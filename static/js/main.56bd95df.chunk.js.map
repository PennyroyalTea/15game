{"version":3,"sources":["Util.ts","Tile.tsx","Field.tsx","Game.tsx","Leaderboard.tsx","UserForm.tsx","Main.tsx","App.tsx","index.tsx"],"names":["permutateToWinnable","tiles","sum","i","size","get","j","Math","floor","calculateParity","sortBy","random","Tile","props","cls","value","className","onClick","clickHandler","Field","field","map","x","handleTileClick","Title","Typography","getxy","ind","y","swap","list","pos1","pos2","tmp","set","wordform","Game","state","List","clicksCnt","bind","handleRestart","message","success","this","oldLB","JSON","parse","window","localStorage","getItem","push","name","user","steps","setItem","stringify","val","a","b","curTileCoord","indexOf","emptyTileCoord","abs","nextField","setState","every","id","handleWin","direction","span","level","React","Component","columns","title","dataIndex","key","sorter","Leaderboard","data","loadData","dataString","dataSource","UserForm","visible","footer","closable","onFinish","res","submitName","Item","label","rules","required","type","htmlType","Header","Layout","Content","Main","undefined","handleMenuClick","e","content","style","fontSize","theme","mode","defaultSelectedKeys","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56bd95df.chunk.js","sourcesContent":["import {List} from 'immutable';\n\nexport function permutateToWinnable(tiles: List<number>) : List<number> {\n    tiles = tiles.sortBy(Math.random);\n    if (calculateParity(tiles) === 0) {\n        return tiles;\n    } else {\n        return permutateToWinnable(tiles);\n    }\n}\n\nfunction calculateParity(tiles: List<number>) {\n    let sum = 0;\n    for (let i = 0; i < tiles.size; ++i) {\n        if (tiles.get(i) === 0) {\n            sum += Math.floor(i / 4) + 1;\n            continue;\n        }\n        for (let j = i + 1; j < tiles.size; ++j) {\n            if (tiles.get(j)!! < tiles.get(i)!! && tiles.get(j)!! !== 0) sum += 1;\n        }\n    }\n    return sum % 2;\n}\n\n","import React from 'react';\nimport './Field.css';\n\ninterface Props {\n    value: number | null,\n    clickHandler(): void\n}\n\nconst Tile = (props : Props) => {\n    let cls = 'tile';\n    if (props.value === 0) cls += ' empty';\n    return (\n        <div className={cls} onClick={props.clickHandler}>\n            <span className='content'>{props.value}</span>\n        </div>\n    )\n}\n\nexport default Tile;","import React from 'react';\nimport {List} from 'immutable';\n\nimport Tile from './Tile';\n\ninterface Props {\n    field: List<number>,\n    handleTileClick(val: number): void\n}\n\nconst Field = (props : Props) => {\n    const tiles = props.field.map(x => <Tile value={x} clickHandler={() => props.handleTileClick(x)} key={x}/>)\n    return (<div className='field'>\n        {tiles}\n    </div>);\n}\n\nexport default Field;","import React from 'react';\n\nimport 'antd/dist/antd.css';\nimport { Space,  Row, Col, Typography, Button, message } from 'antd';\n\nimport {permutateToWinnable} from './Util';\n\nimport {List} from 'immutable';\nimport Field from './Field';\n\nconst {Title} = Typography;\n\ninterface Coord {\n    x: number,\n    y: number\n}\n\nconst getxy = (ind : number) : Coord => {\n    const x = ind % 4;\n    const y = (ind - x) / 4;\n    return {x: x, y: y};\n}\n\nconst adjacent = (a: Coord, b: Coord) : boolean => {\n    return (\n        (a.x === b.x && Math.abs(a.y - b.y) === 1)\n        || (a.y === b.y && Math.abs(a.x - b.x) === 1)\n    );\n}\n\nconst swap = (list : List<number>, pos1 : number, pos2: number) : List<number> => {\n    const tmp = list.get(pos1);\n    return list.set(pos1, list.get(pos2) as number).set(pos2, tmp as number);\n}\n\nconst isWin = (list: List<number>) : boolean => {\n    return list.every((val, id) => val === (id + 1) % 16);\n}\n\nconst wordform = ['кликов', 'клик', 'клика', 'клика', 'клика', 'кликов', 'кликов', 'кликов', 'кликов', 'кликов'];\n\ninterface Props {\n    user: string\n}\ninterface State {\n    field: List<number>,\n    clicksCnt: number\n}\n\nclass Game extends React.Component<Props, State> {\n    constructor(props : Props) {\n        super(props);\n        this.state = {\n            field: List([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15]),\n            clicksCnt: 0\n        }\n\n        this.handleTileClick = this.handleTileClick.bind(this)\n        this.handleRestart = this.handleRestart.bind(this)\n    }\n\n    handleWin() {\n        message.success(`Вы справились за ${this.state.clicksCnt} ${wordform[this.state.clicksCnt % 10]}!`);\n\n        let oldLB = JSON.parse(window.localStorage.getItem('leaderboard') || '[]')\n        oldLB.push({name: this.props.user, steps: this.state.clicksCnt})\n        window.localStorage.setItem('leaderboard', JSON.stringify(oldLB));\n\n        this.handleRestart();\n    }\n\n    handleTileClick (val: number) {\n        if (val === 0) return;\n        const curTileCoord = getxy(this.state.field.indexOf(val));\n        const emptyTileCoord = getxy(this.state.field.indexOf(0));\n        if (adjacent(curTileCoord, emptyTileCoord)) {\n            const nextField = swap(this.state.field, this.state.field.indexOf(val), this.state.field.indexOf(0))\n            this.setState({\n                field: swap(this.state.field, this.state.field.indexOf(val), this.state.field.indexOf(0)),\n                clicksCnt: this.state.clicksCnt + 1\n            }, () => {\n                if (isWin(nextField)) {\n                    this.handleWin()\n                }\n            })\n\n        }\n    }\n\n    handleRestart () {\n        this.setState({\n            field: permutateToWinnable(this.state.field),\n            clicksCnt: 0\n        })\n    }\n\n    render() {\n        return (<Space direction='vertical'>\n            <Row>\n                <Col span={8}>\n                    <Title level={4}>Кликов сделано: {this.state.clicksCnt} </Title>\n                </Col>\n                <Col span={8}/>\n                <Col span={8}>\n                    <Button size='large' onClick={this.handleRestart}>Перемешать</Button>\n                </Col>\n            </Row>\n            <Field\n                field = {this.state.field}\n                handleTileClick = {this.handleTileClick}\n            />\n        </Space>)\n    }\n}\n\nexport default Game;","import React from 'react';\n\nimport {Table} from 'antd';\n\ninterface Props {}\ninterface State {\n    data: Entry[]\n}\n\ninterface Entry {\n    name: string,\n    steps: number\n}\n\nconst columns = [\n    {\n        title: 'Имя',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Количество кликов',\n        dataIndex: 'steps',\n        key: 'steps',\n        sorter: (a : Entry, b : Entry) => a.steps - b.steps\n    }\n];\n\n\nexport default class Leaderboard extends React.Component<Props, State> {\n    constructor(props : Props) {\n        super(props);\n\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    loadData() {\n        const dataString = window.localStorage.getItem('leaderboard') || '[]'\n        this.setState({\n            data: JSON.parse(dataString)\n        })\n    }\n\n    render() {\n        return (<Table\n            dataSource={this.state.data}\n            columns={columns}\n        />);\n    }\n}\n","import React from 'react';\n\nimport {Modal, Typography, Form, Button, Input} from 'antd';\n\nconst {Title} = Typography;\n\n\nexport default function UserForm(props: any) {\n    return (\n        <Modal\n            visible={props.visible}\n            footer={null}\n            closable={false}\n        >\n            <Title level={3}>Пожалуйста, введите имя пользователя.</Title>\n            <Form onFinish={(res: any) => props.submitName(res.name)}>\n                <Form.Item\n                    label=\"Имя\"\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Пожалуйста, введите имя!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Отправить\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}","import React from \"react\";\n\nimport { Menu, Layout} from 'antd';\n\nimport Game from \"./Game\";\nimport Leaderboard from \"./Leaderboard\";\nimport UserForm from \"./UserForm\";\n\nconst {Header, Content} = Layout;\n\ninterface Props {}\ninterface State {\n    window: 'game' | 'leaderboard',\n    user: string | undefined\n}\n\nexport default class Main extends React.Component<Props, State> {\n    constructor(props : Props) {\n        super(props);\n        this.state = {\n            window: 'game',\n            user: undefined\n        }\n        this.handleMenuClick = this.handleMenuClick.bind(this)\n    }\n\n    handleMenuClick(e : any) {\n        this.setState({\n            window: e.key\n        })\n    }\n\n    render() {\n        const content = (this.state.window === 'game' ? <Game user={this.state.user || 'undefined'}/> : <Leaderboard/>);\n\n\n        return (\n            <>\n                <Layout>\n                    <Header>\n                        <Menu\n                            style={{fontSize: '18px'}}\n                            theme='dark'\n                            mode='horizontal'\n                            onClick={this.handleMenuClick}\n                            defaultSelectedKeys={['game']}\n                        >\n                            <Menu.Item key='game'>\n                                Игра\n                            </Menu.Item>\n                            <Menu.Item key='leaderboard'>\n                                Рейтинг\n                            </Menu.Item>\n                        </Menu>\n                    </Header>\n                    <Content>\n                        {content}\n                    </Content>\n                </Layout>\n                <UserForm\n                    visible={this.state.user === undefined}\n                    submitName={(name: string) => this.setState({user: name})}\n                />\n            </>\n\n\n            );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport Main from \"./Main\";\n\n\nconst App = () => {\n  // eslint-disable-next-line react/jsx-no-undef\n  return (<Main/>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}